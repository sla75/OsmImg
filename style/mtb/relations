# -------------------------------------------------------------------
# This is the default mkgmap style file for applying rules on
# OSM relations.  Usually you will set tags on the
# elements that make up the relation, and the tags will be
# processed by the rules defined in the "points" or "lines" files.
#
# Any line prefaced with # is a comment and will not be applied.
# Each line is a rule, of the generalised format:
#  OSM_tag(s)_to_match  [Garmin_type_code resolution]
# See http://wiki.openstreetmap.org/wiki/Mkgmap/help/style_rules
# and http://wiki.openstreetmap.org/wiki/Mkgmap/help/Custom_styles
# for more information.

# Names of administrative boundaries.
# We could want to sort the relations in ascending order of admin_level
# and alphabetically by name first.
# Currently, the matching relations will be processed and the names
# appended to the boundary lines in an arbitrary order.

state~'proposed|recommended' { deletealltags }

type=route & route=bicycle {
	apply {
		set bicycleroute=yes;
		set bicyclename='${name}';
		set bicycleref='${ref}';
		set bicycleroute='yes';
		add bicyclecolour='${colour}'
	}
}

type=route & route~'mtb|MTB' {
	apply role=forward {
		add role='forward'
	}
	apply role=backward {
		add role='backward'
	}
	apply {
		add mtbroute=yes;
		add ref='${ref}';
		add oneway='${oneway}'
		add mtbname='${ref} ${name}'
		add mtbcolour='${colour}'
	}
}

route~'Xfoot|hikingX' & osmc:symbol~'red|red:.*'{
	apply {
		set hikingroute=yes;
		set hiking_red='${osmc:symbol}';
		set hiking_red_name=
			'${osmc:name} (${distance})' | '${osmc:name}' |
			'${name} (${distance})' | '${name}'
	}
}
route~'Xfoot|hikingX' & osmc:symbol~'green|green:.*'{
	apply {
		set hikingroute=yes;
		set hiking_green='${osmc:symbol}';
		set hiking_green_name=
			'${osmc:name} (${distance})' | '${osmc:name}' |
			'${name} (${distance})' | '${name}'
	}
}
route~'Xfoot|hikingX' & osmc:symbol~'yellow|yellow:.*'{
	apply {
		set hikingroute=yes;
		set hiking_yellow='${osmc:symbol}';
		set hiking_yellow_name=
			'${osmc:name} (${distance})' | '${osmc:name}' |
			'${name} (${distance})' | '${name}'
	}
}
route~'Xfoot|hikingX' & osmc:symbol~'blue|blue:.*'{
	apply {
		set hikingroute=yes;
		set hiking_blue='${osmc:symbol}';
		set hiking_blue_name=
			'${osmc:name} (${distance})' | '${osmc:name}' |
			'${name} (${distance})' | '${name}'
	}
}
